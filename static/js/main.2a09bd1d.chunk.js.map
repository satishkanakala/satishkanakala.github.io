{"version":3,"sources":["componets/Cards/Cards.module.css","componets/Cards/Cards.jsx","api/index.js","componets/Charts/Charts.jsx","componets/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","componets/Charts/Charts.module.css","componets/CountryPicker/CountryPicker.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","country","a","chagedUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","getCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handelCountryChange","fetchedCountries","setfetchedCountries","fectCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","response","this","src","coronaImg","alt","image","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a09bd1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__25GsU\",\"card\":\"Cards_card__3dZaZ\",\"infected\":\"Cards_infected__mlS0N\",\"recovered\":\"Cards_recovered__2wfK_\",\"deaths\":\"Cards_deaths__3op9W\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport CountUP from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n       return('...loading');\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography varaint=\"h5\"><CountUP start={0} end={confirmed.value} duration={2.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography varaint=\"h5\"><CountUP start={0} end={recovered.value} duration={2.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered from  Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography varaint=\"h5\"><CountUP start={0} end={deaths.value} duration={2.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n    let chagedUrl  = url;\r\n    if(country){\r\n        chagedUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(chagedUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    }\r\n    catch (error) {\r\n       console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const getCountries = async () =>{\r\n    try{\r\n     const {data:{countries}} = await axios.get(`${url}/countries`);\r\n     return countries.map((country) => country.name);\r\n    }catch(error){\r\n     console.log(error)\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css'\r\n\r\nconst Charts = ({data:{confirmed,deaths,recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetchApi();\r\n    },[])\r\n    \r\n    const lineChart = (\r\n       dailyData.length ? (<Line \r\n           data = {{\r\n               labels: dailyData.map(({date})=> date),\r\n               datasets:[{\r\n                data: dailyData.map(({confirmed})=> confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n               },\r\n               {\r\n                data: dailyData.map(({deaths})=> deaths),\r\n                label:'Deaths',\r\n                borderColor:'#3333ff',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n               }]\r\n           }}\r\n        />): null);\r\n\r\n        const barChart = (\r\n          confirmed ? (<Bar\r\n               data= {{\r\n                   labels:['Infected','Recovered','Deaths'],\r\n                   datasets:[{\r\n                       label:'People',\r\n                       backgroundColor:[\r\n                           'rgba(0,0,255,0.5)',\r\n                           'rgba(0,255,0,0.5)',\r\n                           'rgba(255,0,0,0.5)'\r\n                       ],\r\n                       data:[confirmed.value,recovered.value,deaths.value]\r\n                   }]\r\n               }}\r\n               options={{\r\n                   legend:{display:false},\r\n                   title:{display:true, text:`Current state in ${country}`}\r\n               }}\r\n             />): null);\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {getCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handelCountryChange}) => {\r\n\r\n   const [fetchedCountries,setfetchedCountries] = useState([]);\r\n\r\n   useEffect(() => {\r\n       const fectCountries = async () =>{\r\n           setfetchedCountries(await getCountries())\r\n       }\r\n       fectCountries();\r\n   },[setfetchedCountries])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handelCountryChange(e.target.value)}>\r\n                <option value=\"\">Select Country</option>\r\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Cards, Charts, CountryPicker} from './componets'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api'\r\nimport coronaImg from './images/covid.png'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data:{},\r\n        country:''\r\n    }\r\n    async componentDidMount() {\r\n       const response = await fetchData();\r\n       this.setState({ data: response});\r\n    }\r\n    handelCountryChange = async (country) => {\r\n       const fetchedData = await fetchData(country);\r\n       this.setState({ data: fetchedData, country: country});\r\n    }\r\n    render() {\r\n        const {data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n            <img src={coronaImg} alt=\"covid-19\" className={styles.image}/>\r\n                <Cards data={data}></Cards>\r\n                <CountryPicker handelCountryChange={this.handelCountryChange}></CountryPicker>\r\n                <Charts data={data} country={country} ></Charts>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__ZxoKV\",\"image\":\"App_image__1BuqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3OkZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3EhDe\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}