{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cards/cards.component.ts","./src/app/cards/cards.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  apidata;\n  constructor(public http: HttpClient) {\n\n   }\n\n   getData = () => {\n     this.apidata = this.http.get('https://covid19.mathdro.id/api');\n     return this.apidata;\n   }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public translate: TranslateService){\n     translate.addLangs(['en', 'fr']);\n     translate.setDefaultLang('en');\n     const browserLang = translate.getBrowserLang();\n     translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n  }\n}\n","<app-cards></app-cards>\n\n<div class=\"selectOption\">\n  <label for=\"\">\n    {{'HOME.SELECT' | translate}}\n    <select class=\"options\" #langselect (change)=\"translate.use(langselect.value)\">\n      <option *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\">{{lang}}</option>\n    </select>\n  </label>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport { TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardsComponent } from './cards/cards.component';\n\nexport function HttpLoaderFactory(http: HttpClient){\n return new TranslateHttpLoader(http);\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n       provide: TranslateLoader,\n       useFactory: HttpLoaderFactory,\n       deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {ApiService} from '../api.service';\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.css']\n})\nexport class CardsComponent implements OnInit {\n  confirmed;\n  deaths;\n  recovered;\n  lastUpdate;\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.fetchCardsData();\n  }\n\n  fetchCardsData = () => {\n   this.apiService.getData().subscribe(( { confirmed, recovered, deaths, lastUpdate } ) => {\n    this.confirmed = confirmed.value;\n    this.deaths = deaths.value;\n    this.recovered = recovered.value;\n    this.lastUpdate = lastUpdate;\n    console.log(this.lastUpdate);\n   });\n\n  }\n}\n","<div class=\"container\">\n<div class=\"card infected\">\n  <h1>{{'HOME.INFECTED' | translate}}</h1>\n  <p class=\"price\">{{confirmed | number}}</p>\n  <p>{{'HOME.DES' | translate}}</p>\n</div>\n<div class=\"card deaths\">\n  <h1>{{'HOME.DEATHS' | translate}}</h1>\n  <p class=\"price\">{{deaths | number}}</p>\n  <p>{{'HOME.DES' | translate}}</p>\n</div>\n<div class=\"card recovered\">\n  <h1>{{'HOME.RECOVERED' | translate}}</h1>\n  <p class=\"price\">{{recovered | number}}</p>\n  <p>{{'HOME.DES' | translate}}</p>\n</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}